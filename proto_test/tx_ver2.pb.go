// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.6.1
// source: tx_ver2.proto

package proto_test

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PbScalar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PbScalar) Reset() {
	*x = PbScalar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbScalar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbScalar) ProtoMessage() {}

func (x *PbScalar) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbScalar.ProtoReflect.Descriptor instead.
func (*PbScalar) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{0}
}

func (x *PbScalar) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PbPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PbPoint) Reset() {
	*x = PbPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbPoint) ProtoMessage() {}

func (x *PbPoint) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbPoint.ProtoReflect.Descriptor instead.
func (*PbPoint) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{1}
}

func (x *PbPoint) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type PbCoinV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version             int32     `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Info                []byte    `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
	PublicKey           *PbPoint  `protobuf:"bytes,3,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Commitment          *PbPoint  `protobuf:"bytes,4,opt,name=Commitment,proto3" json:"Commitment,omitempty"`
	KeyImage            *PbPoint  `protobuf:"bytes,5,opt,name=KeyImage,proto3" json:"KeyImage,omitempty"`
	SharedConcealRandom *PbScalar `protobuf:"bytes,6,opt,name=SharedConcealRandom,proto3" json:"SharedConcealRandom,omitempty"`
	SharedRandom        *PbScalar `protobuf:"bytes,7,opt,name=SharedRandom,proto3" json:"SharedRandom,omitempty"`
	TxRandom            []byte    `protobuf:"bytes,8,opt,name=TxRandom,proto3" json:"TxRandom,omitempty"`
	Mask                *PbScalar `protobuf:"bytes,9,opt,name=Mask,proto3" json:"Mask,omitempty"`
	Amount              *PbScalar `protobuf:"bytes,10,opt,name=Amount,proto3" json:"Amount,omitempty"`
	AssetTag            *PbPoint  `protobuf:"bytes,11,opt,name=AssetTag,proto3" json:"AssetTag,omitempty"`
}

func (x *PbCoinV2) Reset() {
	*x = PbCoinV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbCoinV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbCoinV2) ProtoMessage() {}

func (x *PbCoinV2) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbCoinV2.ProtoReflect.Descriptor instead.
func (*PbCoinV2) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{2}
}

func (x *PbCoinV2) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PbCoinV2) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PbCoinV2) GetPublicKey() *PbPoint {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PbCoinV2) GetCommitment() *PbPoint {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *PbCoinV2) GetKeyImage() *PbPoint {
	if x != nil {
		return x.KeyImage
	}
	return nil
}

func (x *PbCoinV2) GetSharedConcealRandom() *PbScalar {
	if x != nil {
		return x.SharedConcealRandom
	}
	return nil
}

func (x *PbCoinV2) GetSharedRandom() *PbScalar {
	if x != nil {
		return x.SharedRandom
	}
	return nil
}

func (x *PbCoinV2) GetTxRandom() []byte {
	if x != nil {
		return x.TxRandom
	}
	return nil
}

func (x *PbCoinV2) GetMask() *PbScalar {
	if x != nil {
		return x.Mask
	}
	return nil
}

func (x *PbCoinV2) GetAmount() *PbScalar {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *PbCoinV2) GetAssetTag() *PbPoint {
	if x != nil {
		return x.AssetTag
	}
	return nil
}

type PbInnerProductProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L []*PbPoint `protobuf:"bytes,1,rep,name=L,proto3" json:"L,omitempty"`
	R []*PbPoint `protobuf:"bytes,2,rep,name=R,proto3" json:"R,omitempty"`
	A *PbScalar  `protobuf:"bytes,3,opt,name=A,proto3" json:"A,omitempty"`
	B *PbScalar  `protobuf:"bytes,4,opt,name=B,proto3" json:"B,omitempty"`
	P *PbPoint   `protobuf:"bytes,5,opt,name=P,proto3" json:"P,omitempty"`
}

func (x *PbInnerProductProof) Reset() {
	*x = PbInnerProductProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbInnerProductProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbInnerProductProof) ProtoMessage() {}

func (x *PbInnerProductProof) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbInnerProductProof.ProtoReflect.Descriptor instead.
func (*PbInnerProductProof) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{3}
}

func (x *PbInnerProductProof) GetL() []*PbPoint {
	if x != nil {
		return x.L
	}
	return nil
}

func (x *PbInnerProductProof) GetR() []*PbPoint {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *PbInnerProductProof) GetA() *PbScalar {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *PbInnerProductProof) GetB() *PbScalar {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *PbInnerProductProof) GetP() *PbPoint {
	if x != nil {
		return x.P
	}
	return nil
}

type PbRangeProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmsValues  []*PbPoint           `protobuf:"bytes,1,rep,name=CmsValues,proto3" json:"CmsValues,omitempty"`
	A          *PbPoint             `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	S          *PbPoint             `protobuf:"bytes,3,opt,name=S,proto3" json:"S,omitempty"`
	T1         *PbPoint             `protobuf:"bytes,4,opt,name=T1,proto3" json:"T1,omitempty"`
	T2         *PbPoint             `protobuf:"bytes,5,opt,name=T2,proto3" json:"T2,omitempty"`
	TauX       *PbScalar            `protobuf:"bytes,6,opt,name=TauX,proto3" json:"TauX,omitempty"`
	THat       *PbScalar            `protobuf:"bytes,7,opt,name=THat,proto3" json:"THat,omitempty"`
	Mu         *PbScalar            `protobuf:"bytes,8,opt,name=Mu,proto3" json:"Mu,omitempty"`
	InnerProof *PbInnerProductProof `protobuf:"bytes,9,opt,name=InnerProof,proto3" json:"InnerProof,omitempty"`
}

func (x *PbRangeProof) Reset() {
	*x = PbRangeProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbRangeProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbRangeProof) ProtoMessage() {}

func (x *PbRangeProof) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbRangeProof.ProtoReflect.Descriptor instead.
func (*PbRangeProof) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{4}
}

func (x *PbRangeProof) GetCmsValues() []*PbPoint {
	if x != nil {
		return x.CmsValues
	}
	return nil
}

func (x *PbRangeProof) GetA() *PbPoint {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *PbRangeProof) GetS() *PbPoint {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *PbRangeProof) GetT1() *PbPoint {
	if x != nil {
		return x.T1
	}
	return nil
}

func (x *PbRangeProof) GetT2() *PbPoint {
	if x != nil {
		return x.T2
	}
	return nil
}

func (x *PbRangeProof) GetTauX() *PbScalar {
	if x != nil {
		return x.TauX
	}
	return nil
}

func (x *PbRangeProof) GetTHat() *PbScalar {
	if x != nil {
		return x.THat
	}
	return nil
}

func (x *PbRangeProof) GetMu() *PbScalar {
	if x != nil {
		return x.Mu
	}
	return nil
}

func (x *PbRangeProof) GetInnerProof() *PbInnerProductProof {
	if x != nil {
		return x.InnerProof
	}
	return nil
}

type PbProofV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     int32         `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	RangeProof  *PbRangeProof `protobuf:"bytes,2,opt,name=RangeProof,proto3" json:"RangeProof,omitempty"`
	InputCoins  []*PbCoinV2   `protobuf:"bytes,3,rep,name=InputCoins,proto3" json:"InputCoins,omitempty"`
	OutputCoins []*PbCoinV2   `protobuf:"bytes,4,rep,name=OutputCoins,proto3" json:"OutputCoins,omitempty"`
}

func (x *PbProofV2) Reset() {
	*x = PbProofV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbProofV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbProofV2) ProtoMessage() {}

func (x *PbProofV2) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbProofV2.ProtoReflect.Descriptor instead.
func (*PbProofV2) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{5}
}

func (x *PbProofV2) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PbProofV2) GetRangeProof() *PbRangeProof {
	if x != nil {
		return x.RangeProof
	}
	return nil
}

func (x *PbProofV2) GetInputCoins() []*PbCoinV2 {
	if x != nil {
		return x.InputCoins
	}
	return nil
}

func (x *PbProofV2) GetOutputCoins() []*PbCoinV2 {
	if x != nil {
		return x.OutputCoins
	}
	return nil
}

type PbTxVer2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   int32  `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	LockTime  int64  `protobuf:"varint,3,opt,name=LockTime,proto3" json:"LockTime,omitempty"`
	Fee       uint64 `protobuf:"varint,4,opt,name=Fee,proto3" json:"Fee,omitempty"`
	Info      []byte `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`
	SigPubKey []byte `protobuf:"bytes,6,opt,name=SigPubKey,proto3" json:"SigPubKey,omitempty"`
	Sig       []byte `protobuf:"bytes,7,opt,name=Sig,proto3" json:"Sig,omitempty"`
	Proof     []byte `protobuf:"bytes,8,opt,name=Proof,proto3" json:"Proof,omitempty"`
	LastByte  int32  `protobuf:"varint,9,opt,name=LastByte,proto3" json:"LastByte,omitempty"`
	Metadata  []byte `protobuf:"bytes,10,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *PbTxVer2) Reset() {
	*x = PbTxVer2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbTxVer2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTxVer2) ProtoMessage() {}

func (x *PbTxVer2) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTxVer2.ProtoReflect.Descriptor instead.
func (*PbTxVer2) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{6}
}

func (x *PbTxVer2) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PbTxVer2) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PbTxVer2) GetLockTime() int64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *PbTxVer2) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PbTxVer2) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PbTxVer2) GetSigPubKey() []byte {
	if x != nil {
		return x.SigPubKey
	}
	return nil
}

func (x *PbTxVer2) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *PbTxVer2) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *PbTxVer2) GetLastByte() int32 {
	if x != nil {
		return x.LastByte
	}
	return 0
}

func (x *PbTxVer2) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PbTxTokenDataVersion2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        []byte `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Symbol    string `protobuf:"bytes,3,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	SigPubKey []byte `protobuf:"bytes,4,opt,name=SigPubKey,proto3" json:"SigPubKey,omitempty"`
	Sig       []byte `protobuf:"bytes,5,opt,name=Sig,proto3" json:"Sig,omitempty"`
	Proof     []byte `protobuf:"bytes,6,opt,name=Proof,proto3" json:"Proof,omitempty"`
	Type      int32  `protobuf:"varint,7,opt,name=Type,proto3" json:"Type,omitempty"`
	Mintable  bool   `protobuf:"varint,8,opt,name=Mintable,proto3" json:"Mintable,omitempty"`
}

func (x *PbTxTokenDataVersion2) Reset() {
	*x = PbTxTokenDataVersion2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbTxTokenDataVersion2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTxTokenDataVersion2) ProtoMessage() {}

func (x *PbTxTokenDataVersion2) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTxTokenDataVersion2.ProtoReflect.Descriptor instead.
func (*PbTxTokenDataVersion2) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{7}
}

func (x *PbTxTokenDataVersion2) GetID() []byte {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *PbTxTokenDataVersion2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PbTxTokenDataVersion2) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PbTxTokenDataVersion2) GetSigPubKey() []byte {
	if x != nil {
		return x.SigPubKey
	}
	return nil
}

func (x *PbTxTokenDataVersion2) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *PbTxTokenDataVersion2) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *PbTxTokenDataVersion2) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PbTxTokenDataVersion2) GetMintable() bool {
	if x != nil {
		return x.Mintable
	}
	return false
}

type PbTxTokenVer2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx        *PbTxVer2              `protobuf:"bytes,1,opt,name=Tx,proto3" json:"Tx,omitempty"`
	TokenData *PbTxTokenDataVersion2 `protobuf:"bytes,2,opt,name=TokenData,proto3" json:"TokenData,omitempty"`
}

func (x *PbTxTokenVer2) Reset() {
	*x = PbTxTokenVer2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbTxTokenVer2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTxTokenVer2) ProtoMessage() {}

func (x *PbTxTokenVer2) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTxTokenVer2.ProtoReflect.Descriptor instead.
func (*PbTxTokenVer2) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{8}
}

func (x *PbTxTokenVer2) GetTx() *PbTxVer2 {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *PbTxTokenVer2) GetTokenData() *PbTxTokenDataVersion2 {
	if x != nil {
		return x.TokenData
	}
	return nil
}

type PbTxVer2Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   int32      `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Type      string     `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
	LockTime  int64      `protobuf:"varint,3,opt,name=LockTime,proto3" json:"LockTime,omitempty"`
	Fee       uint64     `protobuf:"varint,4,opt,name=Fee,proto3" json:"Fee,omitempty"`
	Info      []byte     `protobuf:"bytes,5,opt,name=Info,proto3" json:"Info,omitempty"`
	SigPubKey []byte     `protobuf:"bytes,6,opt,name=SigPubKey,proto3" json:"SigPubKey,omitempty"`
	Sig       []byte     `protobuf:"bytes,7,opt,name=Sig,proto3" json:"Sig,omitempty"`
	Proof     *PbProofV2 `protobuf:"bytes,8,opt,name=Proof,proto3" json:"Proof,omitempty"`
	LastByte  int32      `protobuf:"varint,9,opt,name=LastByte,proto3" json:"LastByte,omitempty"`
	Metadata  []byte     `protobuf:"bytes,10,opt,name=Metadata,proto3" json:"Metadata,omitempty"`
}

func (x *PbTxVer2Backup) Reset() {
	*x = PbTxVer2Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbTxVer2Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbTxVer2Backup) ProtoMessage() {}

func (x *PbTxVer2Backup) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbTxVer2Backup.ProtoReflect.Descriptor instead.
func (*PbTxVer2Backup) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{9}
}

func (x *PbTxVer2Backup) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *PbTxVer2Backup) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PbTxVer2Backup) GetLockTime() int64 {
	if x != nil {
		return x.LockTime
	}
	return 0
}

func (x *PbTxVer2Backup) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PbTxVer2Backup) GetInfo() []byte {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *PbTxVer2Backup) GetSigPubKey() []byte {
	if x != nil {
		return x.SigPubKey
	}
	return nil
}

func (x *PbTxVer2Backup) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *PbTxVer2Backup) GetProof() *PbProofV2 {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *PbTxVer2Backup) GetLastByte() int32 {
	if x != nil {
		return x.LastByte
	}
	return 0
}

func (x *PbTxVer2Backup) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PbPortalShieldRequestMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TokenID string `protobuf:"bytes,2,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	Proof   []byte `protobuf:"bytes,4,opt,name=Proof,proto3" json:"Proof,omitempty"`
}

func (x *PbPortalShieldRequestMeta) Reset() {
	*x = PbPortalShieldRequestMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbPortalShieldRequestMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbPortalShieldRequestMeta) ProtoMessage() {}

func (x *PbPortalShieldRequestMeta) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbPortalShieldRequestMeta.ProtoReflect.Descriptor instead.
func (*PbPortalShieldRequestMeta) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{10}
}

func (x *PbPortalShieldRequestMeta) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PbPortalShieldRequestMeta) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *PbPortalShieldRequestMeta) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PbPortalShieldRequestMeta) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type PbPortalSubmitConfirmedTxMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	TokenID string `protobuf:"bytes,2,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
	BatchID string `protobuf:"bytes,3,opt,name=BatchID,proto3" json:"BatchID,omitempty"`
	Proof   []byte `protobuf:"bytes,4,opt,name=Proof,proto3" json:"Proof,omitempty"`
}

func (x *PbPortalSubmitConfirmedTxMeta) Reset() {
	*x = PbPortalSubmitConfirmedTxMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbPortalSubmitConfirmedTxMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbPortalSubmitConfirmedTxMeta) ProtoMessage() {}

func (x *PbPortalSubmitConfirmedTxMeta) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbPortalSubmitConfirmedTxMeta.ProtoReflect.Descriptor instead.
func (*PbPortalSubmitConfirmedTxMeta) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{11}
}

func (x *PbPortalSubmitConfirmedTxMeta) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PbPortalSubmitConfirmedTxMeta) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *PbPortalSubmitConfirmedTxMeta) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

func (x *PbPortalSubmitConfirmedTxMeta) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type PbIssuingEVMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      int32    `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`
	BlockHash []byte   `protobuf:"bytes,2,opt,name=BlockHash,proto3" json:"BlockHash,omitempty"`
	TxIndex   uint64   `protobuf:"varint,3,opt,name=TxIndex,proto3" json:"TxIndex,omitempty"`
	Proofs    [][]byte `protobuf:"bytes,4,rep,name=Proofs,proto3" json:"Proofs,omitempty"`
	TokenID   []byte   `protobuf:"bytes,5,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
}

func (x *PbIssuingEVMRequest) Reset() {
	*x = PbIssuingEVMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tx_ver2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PbIssuingEVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbIssuingEVMRequest) ProtoMessage() {}

func (x *PbIssuingEVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tx_ver2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbIssuingEVMRequest.ProtoReflect.Descriptor instead.
func (*PbIssuingEVMRequest) Descriptor() ([]byte, []int) {
	return file_tx_ver2_proto_rawDescGZIP(), []int{12}
}

func (x *PbIssuingEVMRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PbIssuingEVMRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *PbIssuingEVMRequest) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *PbIssuingEVMRequest) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *PbIssuingEVMRequest) GetTokenID() []byte {
	if x != nil {
		return x.TokenID
	}
	return nil
}

var File_tx_ver2_proto protoreflect.FileDescriptor

var file_tx_ver2_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x1c, 0x0a, 0x08, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1b, 0x0a,
	0x07, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa0, 0x03, 0x0a, 0x08, 0x50,
	0x62, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a,
	0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x61, 0x6c, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x61, 0x6c, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x2d, 0x0a, 0x0c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x0c, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x54, 0x78, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x04,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x21, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x22, 0x8f, 0x01,
	0x0a, 0x13, 0x50, 0x62, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x16, 0x0a, 0x01, 0x4c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x01, 0x4c, 0x12, 0x16, 0x0a,
	0x01, 0x52, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x01, 0x52, 0x12, 0x17, 0x0a, 0x01, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x01, 0x41, 0x12, 0x17,
	0x0a, 0x01, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x52, 0x01, 0x42, 0x12, 0x16, 0x0a, 0x01, 0x50, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x01, 0x50, 0x22,
	0xa9, 0x02, 0x0a, 0x0c, 0x50, 0x62, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x26, 0x0a, 0x09, 0x43, 0x6d, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x43,
	0x6d, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x01, 0x41, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x01, 0x41,
	0x12, 0x16, 0x0a, 0x01, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x01, 0x53, 0x12, 0x18, 0x0a, 0x02, 0x54, 0x31, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02,
	0x54, 0x31, 0x12, 0x18, 0x0a, 0x02, 0x54, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x50, 0x62, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x54, 0x32, 0x12, 0x1d, 0x0a, 0x04,
	0x54, 0x61, 0x75, 0x58, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x52, 0x04, 0x54, 0x61, 0x75, 0x58, 0x12, 0x1d, 0x0a, 0x04, 0x54,
	0x48, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x52, 0x04, 0x54, 0x48, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x4d, 0x75,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x52, 0x02, 0x4d, 0x75, 0x12, 0x34, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x62, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0xac, 0x01, 0x0a, 0x09,
	0x50, 0x62, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x56, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x62, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x0a, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x12, 0x29, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x43, 0x6f, 0x69, 0x6e, 0x56,
	0x32, 0x52, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x2b, 0x0a,
	0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x50, 0x62, 0x43, 0x6f, 0x69, 0x6e, 0x56, 0x32, 0x52, 0x0b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x08, 0x50,
	0x62, 0x54, 0x78, 0x56, 0x65, 0x72, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x50,
	0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x53, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1a, 0x0a,
	0x08, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x50, 0x62, 0x54, 0x78, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x69, 0x67, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x53, 0x69, 0x67, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x53, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x60, 0x0a, 0x0d, 0x50, 0x62, 0x54, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65,
	0x72, 0x32, 0x12, 0x19, 0x0a, 0x02, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x50, 0x62, 0x54, 0x78, 0x56, 0x65, 0x72, 0x32, 0x52, 0x02, 0x54, 0x78, 0x12, 0x34, 0x0a,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x50, 0x62, 0x54, 0x78, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x52, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x8a, 0x02, 0x0a, 0x0e, 0x50, 0x62, 0x54, 0x78, 0x56, 0x65, 0x72, 0x32,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x46,
	0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x50, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x53, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x62, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x56,
	0x32, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x79, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x79, 0x0a, 0x19, 0x50, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x7d, 0x0a, 0x1d, 0x50,
	0x62, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x54, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0x93, 0x01, 0x0a, 0x13, 0x50,
	0x62, 0x49, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x45, 0x56, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16,
	0x0a, 0x06, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44,
	0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tx_ver2_proto_rawDescOnce sync.Once
	file_tx_ver2_proto_rawDescData = file_tx_ver2_proto_rawDesc
)

func file_tx_ver2_proto_rawDescGZIP() []byte {
	file_tx_ver2_proto_rawDescOnce.Do(func() {
		file_tx_ver2_proto_rawDescData = protoimpl.X.CompressGZIP(file_tx_ver2_proto_rawDescData)
	})
	return file_tx_ver2_proto_rawDescData
}

var file_tx_ver2_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tx_ver2_proto_goTypes = []interface{}{
	(*PbScalar)(nil),                      // 0: PbScalar
	(*PbPoint)(nil),                       // 1: PbPoint
	(*PbCoinV2)(nil),                      // 2: PbCoinV2
	(*PbInnerProductProof)(nil),           // 3: PbInnerProductProof
	(*PbRangeProof)(nil),                  // 4: PbRangeProof
	(*PbProofV2)(nil),                     // 5: PbProofV2
	(*PbTxVer2)(nil),                      // 6: PbTxVer2
	(*PbTxTokenDataVersion2)(nil),         // 7: PbTxTokenDataVersion2
	(*PbTxTokenVer2)(nil),                 // 8: PbTxTokenVer2
	(*PbTxVer2Backup)(nil),                // 9: PbTxVer2Backup
	(*PbPortalShieldRequestMeta)(nil),     // 10: PbPortalShieldRequestMeta
	(*PbPortalSubmitConfirmedTxMeta)(nil), // 11: PbPortalSubmitConfirmedTxMeta
	(*PbIssuingEVMRequest)(nil),           // 12: PbIssuingEVMRequest
}
var file_tx_ver2_proto_depIdxs = []int32{
	1,  // 0: PbCoinV2.PublicKey:type_name -> PbPoint
	1,  // 1: PbCoinV2.Commitment:type_name -> PbPoint
	1,  // 2: PbCoinV2.KeyImage:type_name -> PbPoint
	0,  // 3: PbCoinV2.SharedConcealRandom:type_name -> PbScalar
	0,  // 4: PbCoinV2.SharedRandom:type_name -> PbScalar
	0,  // 5: PbCoinV2.Mask:type_name -> PbScalar
	0,  // 6: PbCoinV2.Amount:type_name -> PbScalar
	1,  // 7: PbCoinV2.AssetTag:type_name -> PbPoint
	1,  // 8: PbInnerProductProof.L:type_name -> PbPoint
	1,  // 9: PbInnerProductProof.R:type_name -> PbPoint
	0,  // 10: PbInnerProductProof.A:type_name -> PbScalar
	0,  // 11: PbInnerProductProof.B:type_name -> PbScalar
	1,  // 12: PbInnerProductProof.P:type_name -> PbPoint
	1,  // 13: PbRangeProof.CmsValues:type_name -> PbPoint
	1,  // 14: PbRangeProof.A:type_name -> PbPoint
	1,  // 15: PbRangeProof.S:type_name -> PbPoint
	1,  // 16: PbRangeProof.T1:type_name -> PbPoint
	1,  // 17: PbRangeProof.T2:type_name -> PbPoint
	0,  // 18: PbRangeProof.TauX:type_name -> PbScalar
	0,  // 19: PbRangeProof.THat:type_name -> PbScalar
	0,  // 20: PbRangeProof.Mu:type_name -> PbScalar
	3,  // 21: PbRangeProof.InnerProof:type_name -> PbInnerProductProof
	4,  // 22: PbProofV2.RangeProof:type_name -> PbRangeProof
	2,  // 23: PbProofV2.InputCoins:type_name -> PbCoinV2
	2,  // 24: PbProofV2.OutputCoins:type_name -> PbCoinV2
	6,  // 25: PbTxTokenVer2.Tx:type_name -> PbTxVer2
	7,  // 26: PbTxTokenVer2.TokenData:type_name -> PbTxTokenDataVersion2
	5,  // 27: PbTxVer2Backup.Proof:type_name -> PbProofV2
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_tx_ver2_proto_init() }
func file_tx_ver2_proto_init() {
	if File_tx_ver2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tx_ver2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbScalar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbCoinV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbInnerProductProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbRangeProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbProofV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbTxVer2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbTxTokenDataVersion2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbTxTokenVer2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbTxVer2Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbPortalShieldRequestMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbPortalSubmitConfirmedTxMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tx_ver2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PbIssuingEVMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tx_ver2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tx_ver2_proto_goTypes,
		DependencyIndexes: file_tx_ver2_proto_depIdxs,
		MessageInfos:      file_tx_ver2_proto_msgTypes,
	}.Build()
	File_tx_ver2_proto = out.File
	file_tx_ver2_proto_rawDesc = nil
	file_tx_ver2_proto_goTypes = nil
	file_tx_ver2_proto_depIdxs = nil
}
